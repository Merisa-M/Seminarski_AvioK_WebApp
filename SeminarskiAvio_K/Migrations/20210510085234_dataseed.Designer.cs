// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SeminarskiAvio_K;

namespace SeminarskiAvio_K.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20210510085234_dataseed")]
    partial class dataseed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SeminarskiAvio_K.Models.Admin", b =>
                {
                    b.Property<int>("AdminID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KorisnickiNalogID")
                        .HasColumnType("int");

                    b.Property<string>("Prezime")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AdminID");

                    b.HasIndex("KorisnickiNalogID");

                    b.ToTable("Admin");

                    b.HasData(
                        new
                        {
                            AdminID = 1,
                            Ime = "Admin",
                            KorisnickiNalogID = 1,
                            Prezime = "Admin"
                        });
                });

            modelBuilder.Entity("SeminarskiAvio_K.Models.AutorizacijskiToken", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IpAdresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KorisnickiNalogID")
                        .HasColumnType("int");

                    b.Property<string>("Vrijednost")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("VrijemeEvidentiranja")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("KorisnickiNalogID");

                    b.ToTable("AutorizacijskiToken");
                });

            modelBuilder.Entity("SeminarskiAvio_K.Models.Avion", b =>
                {
                    b.Property<int>("AvionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Kapacitet")
                        .HasColumnType("int");

                    b.Property<int>("KlasaID")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AvionID");

                    b.HasIndex("KlasaID");

                    b.ToTable("Avion");
                });

            modelBuilder.Entity("SeminarskiAvio_K.Models.Grad", b =>
                {
                    b.Property<int>("GradID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GradID");

                    b.ToTable("Grad");
                });

            modelBuilder.Entity("SeminarskiAvio_K.Models.Karta", b =>
                {
                    b.Property<int>("KartaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("KupacID")
                        .HasColumnType("int");

                    b.Property<int>("LetID")
                        .HasColumnType("int");

                    b.Property<int>("RezervacijaID")
                        .HasColumnType("int");

                    b.Property<int>("SjedisteID")
                        .HasColumnType("int");

                    b.HasKey("KartaID");

                    b.HasIndex("KupacID");

                    b.HasIndex("LetID");

                    b.HasIndex("RezervacijaID");

                    b.HasIndex("SjedisteID");

                    b.ToTable("Karta");
                });

            modelBuilder.Entity("SeminarskiAvio_K.Models.Klasa", b =>
                {
                    b.Property<int>("KlasaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KlasaID");

                    b.ToTable("Klasa");
                });

            modelBuilder.Entity("SeminarskiAvio_K.Models.KorisnickiNalog", b =>
                {
                    b.Property<int>("KorisnickiNalogID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("KorisnickoIme")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lozinka")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KorisnickiNalogID");

                    b.ToTable("KorisnickiNalog");

                    b.HasData(
                        new
                        {
                            KorisnickiNalogID = 1,
                            KorisnickoIme = "admin",
                            Lozinka = "admin"
                        },
                        new
                        {
                            KorisnickiNalogID = 2,
                            KorisnickoIme = "test",
                            Lozinka = "test"
                        });
                });

            modelBuilder.Entity("SeminarskiAvio_K.Models.Kupac", b =>
                {
                    b.Property<int>("KupacID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrojTelefona")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BrojTokena")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KorisnickiNalogID")
                        .HasColumnType("int");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KupacID");

                    b.HasIndex("KorisnickiNalogID");

                    b.ToTable("Kupac");

                    b.HasData(
                        new
                        {
                            KupacID = 1,
                            BrojTelefona = "061-111-111",
                            BrojTokena = 20,
                            Email = "prezime.ime@gmail.com",
                            Ime = "ImeKupca",
                            KorisnickiNalogID = 2,
                            Prezime = "PrezimeKupca"
                        });
                });

            modelBuilder.Entity("SeminarskiAvio_K.Models.KupacNagradnaIgra", b =>
                {
                    b.Property<int>("KupacNagradnaIgraID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("KupacID")
                        .HasColumnType("int");

                    b.Property<int>("NagradnaIgraID")
                        .HasColumnType("int");

                    b.HasKey("KupacNagradnaIgraID");

                    b.HasIndex("KupacID");

                    b.HasIndex("NagradnaIgraID");

                    b.ToTable("KupacNagradnaIgra");
                });

            modelBuilder.Entity("SeminarskiAvio_K.Models.Let", b =>
                {
                    b.Property<int>("LetID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cijena")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("GradID")
                        .HasColumnType("int");

                    b.Property<int>("KlasaID")
                        .HasColumnType("int");

                    b.Property<int>("Trajanje")
                        .HasColumnType("int");

                    b.Property<DateTime>("VrijemePolaska")
                        .HasColumnType("datetime2");

                    b.HasKey("LetID");

                    b.HasIndex("GradID");

                    b.HasIndex("KlasaID");

                    b.ToTable("Let");
                });

            modelBuilder.Entity("SeminarskiAvio_K.Models.NagradnaIgra", b =>
                {
                    b.Property<int>("NagradnaIgraID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdminID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Kraj")
                        .HasColumnType("datetime2");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Pocetak")
                        .HasColumnType("datetime2");

                    b.HasKey("NagradnaIgraID");

                    b.HasIndex("AdminID");

                    b.ToTable("NagradnaIgra");
                });

            modelBuilder.Entity("SeminarskiAvio_K.Models.Novosti", b =>
                {
                    b.Property<int>("NovostiID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdminID")
                        .HasColumnType("int");

                    b.Property<string>("AdresaSlike")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DatumVrijemeObjave")
                        .HasColumnType("datetime2");

                    b.Property<string>("KratkiSadrzaj")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tekst")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NovostiID");

                    b.HasIndex("AdminID");

                    b.ToTable("Novosti");
                });

            modelBuilder.Entity("SeminarskiAvio_K.Models.Putovanja", b =>
                {
                    b.Property<int>("PutovanjaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GradID")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ProsjecnaOcjena")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("PutovanjaID");

                    b.HasIndex("GradID");

                    b.ToTable("Putovanja");
                });

            modelBuilder.Entity("SeminarskiAvio_K.Models.PutovanjeKupac", b =>
                {
                    b.Property<int>("PutovanjeKupacID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("KupacID")
                        .HasColumnType("int");

                    b.Property<decimal>("Ocjena")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("PutovanjaID")
                        .HasColumnType("int");

                    b.Property<int>("PutovanjeID")
                        .HasColumnType("int");

                    b.HasKey("PutovanjeKupacID");

                    b.HasIndex("KupacID");

                    b.HasIndex("PutovanjaID");

                    b.ToTable("PutovanjeKupac");
                });

            modelBuilder.Entity("SeminarskiAvio_K.Models.Recenzija", b =>
                {
                    b.Property<int>("RecenzijaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("KupacID")
                        .HasColumnType("int");

                    b.Property<bool>("Odobren")
                        .HasColumnType("bit");

                    b.Property<int>("PutovanjaID")
                        .HasColumnType("int");

                    b.Property<string>("Sadrzaj")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("VrijemeKreiranja")
                        .HasColumnType("datetime2");

                    b.HasKey("RecenzijaID");

                    b.HasIndex("KupacID");

                    b.HasIndex("PutovanjaID");

                    b.ToTable("Recenzija");
                });

            modelBuilder.Entity("SeminarskiAvio_K.Models.Rezervacija", b =>
                {
                    b.Property<int>("RezervacijaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumIsteka")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatumRezervacije")
                        .HasColumnType("datetime2");

                    b.Property<int>("KupacID")
                        .HasColumnType("int");

                    b.Property<int>("LetID")
                        .HasColumnType("int");

                    b.Property<bool>("Odobrena")
                        .HasColumnType("bit");

                    b.HasKey("RezervacijaID");

                    b.HasIndex("KupacID");

                    b.HasIndex("LetID");

                    b.ToTable("Rezervacija");
                });

            modelBuilder.Entity("SeminarskiAvio_K.Models.Sjediste", b =>
                {
                    b.Property<int>("SjedisteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("KlasaID")
                        .HasColumnType("int");

                    b.Property<int>("Kolona")
                        .HasColumnType("int");

                    b.Property<int>("Red")
                        .HasColumnType("int");

                    b.HasKey("SjedisteID");

                    b.HasIndex("KlasaID");

                    b.ToTable("Sjediste");
                });

            modelBuilder.Entity("SeminarskiAvio_K.Models.Zaposlenik", b =>
                {
                    b.Property<int>("ZaposlenikID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdresaSlike")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrojUgovora")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DatumRodjenja")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ZaposlenikID");

                    b.ToTable("Zaposlenik");
                });

            modelBuilder.Entity("SeminarskiAvio_K.Models.ZaposlenikPutovanje", b =>
                {
                    b.Property<int>("ZaposlenikPutovanjeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PutovanjeID")
                        .HasColumnType("int");

                    b.Property<int>("ZaposlenikID")
                        .HasColumnType("int");

                    b.HasKey("ZaposlenikPutovanjeID");

                    b.HasIndex("PutovanjeID");

                    b.HasIndex("ZaposlenikID");

                    b.ToTable("ZaposlenikPutovanje");
                });

            modelBuilder.Entity("SeminarskiAvio_K.Models.Admin", b =>
                {
                    b.HasOne("SeminarskiAvio_K.Models.KorisnickiNalog", "KorisnickiNalog")
                        .WithMany()
                        .HasForeignKey("KorisnickiNalogID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KorisnickiNalog");
                });

            modelBuilder.Entity("SeminarskiAvio_K.Models.AutorizacijskiToken", b =>
                {
                    b.HasOne("SeminarskiAvio_K.Models.KorisnickiNalog", "KorisnickiNalog")
                        .WithMany()
                        .HasForeignKey("KorisnickiNalogID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KorisnickiNalog");
                });

            modelBuilder.Entity("SeminarskiAvio_K.Models.Avion", b =>
                {
                    b.HasOne("SeminarskiAvio_K.Models.Klasa", "Klasa")
                        .WithMany()
                        .HasForeignKey("KlasaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Klasa");
                });

            modelBuilder.Entity("SeminarskiAvio_K.Models.Karta", b =>
                {
                    b.HasOne("SeminarskiAvio_K.Models.Kupac", "Kupac")
                        .WithMany()
                        .HasForeignKey("KupacID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SeminarskiAvio_K.Models.Let", "Let")
                        .WithMany()
                        .HasForeignKey("LetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SeminarskiAvio_K.Models.Rezervacija", "Rezervacija")
                        .WithMany()
                        .HasForeignKey("RezervacijaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SeminarskiAvio_K.Models.Sjediste", "Sjediste")
                        .WithMany()
                        .HasForeignKey("SjedisteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kupac");

                    b.Navigation("Let");

                    b.Navigation("Rezervacija");

                    b.Navigation("Sjediste");
                });

            modelBuilder.Entity("SeminarskiAvio_K.Models.Kupac", b =>
                {
                    b.HasOne("SeminarskiAvio_K.Models.KorisnickiNalog", "KorisnickiNalog")
                        .WithMany()
                        .HasForeignKey("KorisnickiNalogID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KorisnickiNalog");
                });

            modelBuilder.Entity("SeminarskiAvio_K.Models.KupacNagradnaIgra", b =>
                {
                    b.HasOne("SeminarskiAvio_K.Models.Kupac", "Kupac")
                        .WithMany()
                        .HasForeignKey("KupacID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SeminarskiAvio_K.Models.NagradnaIgra", "NagradnaIgra")
                        .WithMany()
                        .HasForeignKey("NagradnaIgraID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kupac");

                    b.Navigation("NagradnaIgra");
                });

            modelBuilder.Entity("SeminarskiAvio_K.Models.Let", b =>
                {
                    b.HasOne("SeminarskiAvio_K.Models.Grad", "Grad")
                        .WithMany()
                        .HasForeignKey("GradID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SeminarskiAvio_K.Models.Klasa", "Klasa")
                        .WithMany()
                        .HasForeignKey("KlasaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grad");

                    b.Navigation("Klasa");
                });

            modelBuilder.Entity("SeminarskiAvio_K.Models.NagradnaIgra", b =>
                {
                    b.HasOne("SeminarskiAvio_K.Models.Admin", "Admin")
                        .WithMany()
                        .HasForeignKey("AdminID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Admin");
                });

            modelBuilder.Entity("SeminarskiAvio_K.Models.Novosti", b =>
                {
                    b.HasOne("SeminarskiAvio_K.Models.Admin", "Admin")
                        .WithMany()
                        .HasForeignKey("AdminID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Admin");
                });

            modelBuilder.Entity("SeminarskiAvio_K.Models.Putovanja", b =>
                {
                    b.HasOne("SeminarskiAvio_K.Models.Grad", "Grad")
                        .WithMany()
                        .HasForeignKey("GradID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grad");
                });

            modelBuilder.Entity("SeminarskiAvio_K.Models.PutovanjeKupac", b =>
                {
                    b.HasOne("SeminarskiAvio_K.Models.Kupac", "Kupac")
                        .WithMany()
                        .HasForeignKey("KupacID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SeminarskiAvio_K.Models.Putovanja", "Putovanja")
                        .WithMany()
                        .HasForeignKey("PutovanjaID");

                    b.Navigation("Kupac");

                    b.Navigation("Putovanja");
                });

            modelBuilder.Entity("SeminarskiAvio_K.Models.Recenzija", b =>
                {
                    b.HasOne("SeminarskiAvio_K.Models.Kupac", "Kupac")
                        .WithMany()
                        .HasForeignKey("KupacID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SeminarskiAvio_K.Models.Putovanja", "Putovanja")
                        .WithMany()
                        .HasForeignKey("PutovanjaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kupac");

                    b.Navigation("Putovanja");
                });

            modelBuilder.Entity("SeminarskiAvio_K.Models.Rezervacija", b =>
                {
                    b.HasOne("SeminarskiAvio_K.Models.Kupac", "Kupac")
                        .WithMany()
                        .HasForeignKey("KupacID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SeminarskiAvio_K.Models.Let", "Let")
                        .WithMany()
                        .HasForeignKey("LetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kupac");

                    b.Navigation("Let");
                });

            modelBuilder.Entity("SeminarskiAvio_K.Models.Sjediste", b =>
                {
                    b.HasOne("SeminarskiAvio_K.Models.Klasa", "Klasa")
                        .WithMany()
                        .HasForeignKey("KlasaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Klasa");
                });

            modelBuilder.Entity("SeminarskiAvio_K.Models.ZaposlenikPutovanje", b =>
                {
                    b.HasOne("SeminarskiAvio_K.Models.Putovanja", "Putovanje")
                        .WithMany()
                        .HasForeignKey("PutovanjeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SeminarskiAvio_K.Models.Zaposlenik", "Zaposlenik")
                        .WithMany()
                        .HasForeignKey("ZaposlenikID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Putovanje");

                    b.Navigation("Zaposlenik");
                });
#pragma warning restore 612, 618
        }
    }
}
